{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mads2\\\\Documents\\\\GitHub\\\\frontend-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\mads2\\\\Documents\\\\GitHub\\\\frontend-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mads2\\\\Documents\\\\GitHub\\\\frontend-react\\\\src\\\\views\\\\Server\\\\Server.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport BootstrapTable from \"react-bootstrap-table-next\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\"; // @material-ui/icons\n\nimport Notifications from \"@material-ui/icons/Notifications\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Table from \"components/Table/Table.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { Sort } from \"@material-ui/icons\";\nvar useStyles = makeStyles(styles);\nexport default function Server() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openNotification = _React$useState2[0],\n      setOpenNotification = _React$useState2[1];\n\n  var handleClickNotification = function handleClickNotification(event) {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n\n  var handleCloseNotification = function handleCloseNotification() {\n    setOpenNotification(null);\n  };\n\n  var columns = [{\n    dataField: 'node',\n    text: 'Node',\n    sort: true\n  }, {\n    dataField: 'cluster',\n    text: 'Cluster',\n    sort: true\n  }, {\n    dataField: 'ip',\n    text: 'IP',\n    sort: true\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.manager,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: window.innerWidth > 959 ? \"transparent\" : \"white\",\n    justIcon: window.innerWidth > 959,\n    simple: !(window.innerWidth > 959),\n    \"aria-owns\": openNotification ? \"notification-menu-list-grow\" : null,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClickNotification,\n    className: classes.buttonLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Notifications, {\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    onClick: handleCloseNotification,\n    className: classes.linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Notification\"))), /*#__PURE__*/React.createElement(Poppers, {\n    open: Boolean(openNotification),\n    anchorEl: openNotification,\n    transition: true,\n    disablePortal: true,\n    className: classNames(_defineProperty({}, classes.popperClose, !openNotification)) + \" \" + classes.popperNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n      id: \"notification-menu-list-grow\",\n      style: {\n        transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n      onClickAway: handleCloseNotification,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MenuList, {\n      role: \"menu\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, \"Mike John responded to your email\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \"You have 5 new tasks\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, \"You\", \"'\", \"re now friend with Andrew\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \"Another Notification\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, \"Another One\")))));\n  })), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Server Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"List of Servers\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    keyField: \"node\",\n    data: [[\"Node 1\", \"Cluster 1\", \"Address 1\"], [\"Node 2\", \"Cluster 2\", \"Address 2\"], [\"Node 3\", \"Cluster 3\", \"Address 3\"], [\"Node 4\", \"Cluster 4\", \"Address 4\"]],\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/mads2/Documents/GitHub/frontend-react/src/views/Server/Server.js"],"names":["React","classNames","BootstrapTable","makeStyles","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Poppers","Notifications","Button","Card","CardHeader","Table","CardBody","styles","Sort","useStyles","Server","classes","useState","openNotification","setOpenNotification","handleClickNotification","event","contains","target","currentTarget","handleCloseNotification","columns","dataField","text","sort","manager","window","innerWidth","buttonLink","icons","notifications","linkText","Boolean","popperClose","popperNav","TransitionProps","placement","transformOrigin","dropdownItem","cardTitleWhite","cardCategoryWhite"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\n// @material-ui/icons\r\nimport Notifications from \"@material-ui/icons/Notifications\";\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\nimport { Sort } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Server() {\r\n    const classes = useStyles();\r\n    const [openNotification, setOpenNotification] = React.useState(null);\r\n    const handleClickNotification = event => {\r\n        if (openNotification && openNotification.contains(event.target)) {\r\n            setOpenNotification(null);\r\n        } else {\r\n            setOpenNotification(event.currentTarget);\r\n        }\r\n    };\r\n    const handleCloseNotification = () => {\r\n        setOpenNotification(null);\r\n    };\r\n\r\n    const columns = [{\r\n        dataField: 'node',\r\n        text: 'Node',\r\n        sort: true\r\n      }, {\r\n        dataField: 'cluster',\r\n        text: 'Cluster',\r\n        sort: true\r\n      }, {\r\n        dataField: 'ip',\r\n        text: 'IP',\r\n        sort: true\r\n      }];\r\n\r\n    return (\r\n\r\n        \r\n        <div>\r\n            <div className={classes.manager}>\r\n                <Button\r\n                    color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n                    justIcon={window.innerWidth > 959}\r\n                    simple={!(window.innerWidth > 959)}\r\n                    aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClickNotification}\r\n                    className={classes.buttonLink}\r\n                >\r\n                    <Notifications className={classes.icons} />\r\n                    <span className={classes.notifications}>5</span>\r\n                    <Hidden mdUp implementation=\"css\">\r\n                        <p onClick={handleCloseNotification} className={classes.linkText}>\r\n                            Notification\r\n            </p>\r\n                    </Hidden>\r\n                </Button>\r\n                <Poppers\r\n                    open={Boolean(openNotification)}\r\n                    anchorEl={openNotification}\r\n                    transition\r\n                    disablePortal\r\n                    className={\r\n                        classNames({ [classes.popperClose]: !openNotification }) +\r\n                        \" \" +\r\n                        classes.popperNav\r\n                    }\r\n                >\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            id=\"notification-menu-list-grow\"\r\n                            style={{\r\n                                transformOrigin:\r\n                                    placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n                            }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleCloseNotification}>\r\n                                    <MenuList role=\"menu\">\r\n                                        <MenuItem\r\n                                            onClick={handleCloseNotification}\r\n                                            className={classes.dropdownItem}\r\n                                        >\r\n                                            Mike John responded to your email\r\n                    </MenuItem>\r\n                                        <MenuItem\r\n                                            onClick={handleCloseNotification}\r\n                                            className={classes.dropdownItem}\r\n                                        >\r\n                                            You have 5 new tasks\r\n                    </MenuItem>\r\n                                        <MenuItem\r\n                                            onClick={handleCloseNotification}\r\n                                            className={classes.dropdownItem}\r\n                                        >\r\n                                            You{\"'\"}re now friend with Andrew\r\n                    </MenuItem>\r\n                                        <MenuItem\r\n                                            onClick={handleCloseNotification}\r\n                                            className={classes.dropdownItem}\r\n                                        >\r\n                                            Another Notification\r\n                    </MenuItem>\r\n                                        <MenuItem\r\n                                            onClick={handleCloseNotification}\r\n                                            className={classes.dropdownItem}\r\n                                        >\r\n                                            Another One\r\n                    </MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Poppers>\r\n            </div>\r\n\r\n\r\n\r\n            <Card>\r\n                    <CardHeader color=\"warning\">\r\n                        <h4 className={classes.cardTitleWhite}>Server Overview</h4>\r\n                        <p className={classes.cardCategoryWhite}>\r\n                            List of Servers\r\n              </p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    <BootstrapTable keyField='node' data={ [\r\n                                [\"Node 1\", \"Cluster 1\", \"Address 1\"],\r\n                                [\"Node 2\", \"Cluster 2\", \"Address 2\"],\r\n                                [\"Node 3\", \"Cluster 3\", \"Address 3\"],\r\n                                [\"Node 4\", \"Cluster 4\", \"Address 4\"]\r\n                            ] } columns={ columns } />\r\n                    </CardBody>\r\n                </Card>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}